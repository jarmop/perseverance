{"version":3,"sources":["PIA23727_ultrawide_small.png","App.js","reportWebVitals.js","index.js"],"names":["CANVAS_SIZE","CANVAS_CENTER","X","Y","CIRCLE_RADIUS","draw","ctx","background","viewAngleRight","viewAngleLeft","clearRect","beginPath","drawImage","arc","Math","PI","moveTo","lineTo","cos","sin","stroke","getPositionInRadians","position","IMAGE_ASPECT_RATIO","getLeftInRadians","window","scrollX","getRightInRadians","innerWidth","App","useEffect","document","getElementById","getContext","Image","src","onload","addEventListener","className","image","alt","id","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wJAAe,G,UAAA,IAA0B,sD,OCSnCA,EAAc,IACdC,EAAgB,CACpBC,EAAGF,IACHG,EAAGH,KAECI,EAAgBJ,IAEhBK,EAAO,SAACC,EAAKC,EAAYC,EAAgBC,GAC7CH,EAAII,UAAU,EAAG,EAAGV,EAAaA,GACjCM,EAAIK,YACJL,EAAIM,UAAUL,EAAY,EAAG,GAC7BD,EAAIO,IAAIZ,EAAcC,EAAGD,EAAcE,EAAGC,EAAe,EAAG,EAAIU,KAAKC,IACrET,EAAIU,OAAOf,EAAcC,EAAGD,EAAcE,GAC1CG,EAAIW,OACFhB,EAAcC,EAAIE,EAAgBU,KAAKI,IAAIT,GAC3CR,EAAcE,EAAIC,EAAgBU,KAAKK,IAAIV,IAE7CH,EAAIU,OAAOf,EAAcC,EAAGD,EAAcE,GAC1CG,EAAIW,OACFhB,EAAcC,EAAIE,EAAgBU,KAAKI,IAAIV,GAC3CP,EAAcE,EAAIC,EAAgBU,KAAKK,IAAIX,IAE7CF,EAAIc,UAGAC,EAAuB,SAACC,GAC5B,OAAQA,EA3BkBC,mBA2BgB,EAAIT,KAAKC,GAAK,KAEpDS,EAAmB,kBAAMH,EAAqBI,OAAOC,UACrDC,EAAoB,kBACxBN,EAAqBI,OAAOC,QAAUD,OAAOG,aAwBhCC,MAtBf,WAcE,OAbAC,qBAAU,WACR,IACMxB,EADSyB,SAASC,eAAe,UACpBC,WAAW,MACxB1B,EAAa,IAAI2B,MACvB3B,EAAW4B,IAAM,aACjB5B,EAAW6B,OAAS,WAClB/B,EAAKC,EAAKC,EAAYiB,IAAoBG,MAE5CI,SAASM,iBAAiB,UAAU,WAClChC,EAAKC,EAAKC,EAAYiB,IAAoBG,UAE3C,IAGD,sBAAKW,UAAU,MAAf,UACE,qBAAKH,IAAKI,EAAOC,IAAI,KACrB,wBAAQC,GAAG,SAASC,MAAO1C,EAAa2C,OAAQ3C,QC9CvC4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASC,eAAe,SAM1BY,K","file":"static/js/main.70540ff4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/PIA23727_ultrawide_small.d064c005.png\";","import { useEffect } from 'react'\nimport './App.css'\nimport image from './PIA23727_ultrawide_small.png'\n\nconst IMAGE_WIDTH = 93355\nconst IMAGE_HEIGHT = 2127\nconst IMAGE_ASPECT_RATIO = IMAGE_WIDTH / IMAGE_HEIGHT\nconst IMAGE_ELEMENT_HEIGHT = 500\nconst IMAGE_ELEMENT_WIDTH = IMAGE_ASPECT_RATIO * IMAGE_ELEMENT_HEIGHT\nconst CANVAS_SIZE = 200\nconst CANVAS_CENTER = {\n  X: CANVAS_SIZE / 2,\n  Y: CANVAS_SIZE / 2,\n}\nconst CIRCLE_RADIUS = CANVAS_SIZE / 2\n\nconst draw = (ctx, background, viewAngleRight, viewAngleLeft) => {\n  ctx.clearRect(0, 0, CANVAS_SIZE, CANVAS_SIZE)\n  ctx.beginPath()\n  ctx.drawImage(background, 0, 0)\n  ctx.arc(CANVAS_CENTER.X, CANVAS_CENTER.Y, CIRCLE_RADIUS, 0, 2 * Math.PI)\n  ctx.moveTo(CANVAS_CENTER.X, CANVAS_CENTER.Y)\n  ctx.lineTo(\n    CANVAS_CENTER.X + CIRCLE_RADIUS * Math.cos(viewAngleLeft),\n    CANVAS_CENTER.Y + CIRCLE_RADIUS * Math.sin(viewAngleLeft)\n  )\n  ctx.moveTo(CANVAS_CENTER.X, CANVAS_CENTER.Y)\n  ctx.lineTo(\n    CANVAS_CENTER.X + CIRCLE_RADIUS * Math.cos(viewAngleRight),\n    CANVAS_CENTER.Y + CIRCLE_RADIUS * Math.sin(viewAngleRight)\n  )\n  ctx.stroke()\n}\n\nconst getPositionInRadians = (position) => {\n  return (position / IMAGE_ELEMENT_WIDTH) * 2 * Math.PI + 0.75\n}\nconst getLeftInRadians = () => getPositionInRadians(window.scrollX)\nconst getRightInRadians = () =>\n  getPositionInRadians(window.scrollX + window.innerWidth)\n\nfunction App() {\n  useEffect(() => {\n    const canvas = document.getElementById('canvas')\n    const ctx = canvas.getContext('2d')\n    const background = new Image()\n    background.src = 'jezero.png'\n    background.onload = () => {\n      draw(ctx, background, getLeftInRadians(), getRightInRadians())\n    }\n    document.addEventListener('scroll', () => {\n      draw(ctx, background, getLeftInRadians(), getRightInRadians())\n    })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <img src={image} alt=\"\"></img>\n      <canvas id=\"canvas\" width={CANVAS_SIZE} height={CANVAS_SIZE}></canvas>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}